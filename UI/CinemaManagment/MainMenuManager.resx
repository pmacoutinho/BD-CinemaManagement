<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPUAAABkCAYAAABei3aDAAABg2lDQ1BJQ0MgcHJvZmlsZQAAKM+VkTlI
        A0EYhT8TL0QJYhARiy3USkFUxFKiGAQFiRG8Cnc3JgrZTdiN2FgKtoKFR+NV2Fhra2ErCIIHiJ2dlaKN
        hPWfjZAgRHBgmI838x4zbyBwmDYtt7IHLDvnxKIRbWZ2Tqt5oZpmGgnRoptudmJqNE7Z8XlHhVpvu1UW
        /xsNiSXXhApNeMjMOjnhReGBtVxW8a5w2FzWE8Jnwl2OXFD4QelGgV8Vp3wOqMywE48NC4eFtVQJGyVs
        LjuWcL9we8KyJT8wU+CE4nXFVnrV/LmnemH9kj09pXSZbUQZY4JJNAxWWSFNjm5ZbVFcYrIfKeNv9f2T
        4jLEtYIpjhEyWOi+H/UHv7t1k329haT6CFQ9e957B9RsQ37L876OPC9/DMEnuLSL/swhDH6IvlXU2g8g
        tAHnV0XN2IGLTWh5zOqO7ktBmYFkEt5O5ZtmoekG6uYLvf3sc3IPcelq/Br29qEzJdkLZd5dW9rbn2f8
        /oh8A17Rcp9DqnGIAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH5QYWERsTQAOecQAAFSBJREFU
        eF7tnQm4VWW9xkUc8lZqVlYK4nDrXkVR0VDAEOEgCAqIgiiZSJlNpiZaac6Q3bp68ar3OpTllA8N3m5d
        D5yBQQ0SB1JTE0QOoJCcA4JamjJ8933X/q91vvXtNe69zzkL+v+e533O2d//W9Pe613rW9+0dlAURVEU
        RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
        RVEURVEURVEURVEURVEURVGULmfNGtMdOhS6ALoHehL6C/QetFX+8jPT74WYj/m7yyoURSkCMGVP6Bpo
        CUTzmhxi/qUQl+8pq1QUpSugCaE7oXehKMPmFddzF6TmVpTOBKbbGboEeguKMme14nqnQjvLJhVF6Shg
        tH2heVCUGWstbmdf2bSiKLUGBusLvSqG6yxxe0fJLiiKUitgrIHQBjFaZ4vbHSC7UlOMMR+CjoBGQ2dD
        k6EJ0PFQT2hHyaoo2w8w1OHQG2KwrtJ66HDZpaqAUfeCLoAegd6B4tgMrYLuhAZA3WQVqSBvb+gWSxdJ
        aLsFx3gAdEWM9pRsVYH19HXW6+siKPPv8w8NjLQ31CLG6moth/aWXcsNfvTdoO9BG6C8bIWaoINldYkg
        30guZPGohLZbcIzDSocayTmSrSqwngdLqyvjdUj7O6QBA+0I/U4MZVav7jr5+yD7k7tIjB/8n6HF/PWr
        5G1ovKw2FuRRU4d5WLJVDNbBR6WN3trKUVNnAeaZYpnJzLjpFXPtVS9VpO9e+ry58BvPVqSrrnjBLF3y
        nm3sKbKLmcCPzWdm/uhR8A7cAv0vdDvEovI9EIvmcXf096EzZPWRIK6mDsPHnI9J1orA8uO8NUWjpk4D
        xtkLarWMZK698iVz3uR6M3nST3Jr/NjbzUl1t+TW6BEPmfO/uNg0zGo1S5cGxl4L7SW7mgh+6P0h3OvL
        oDHvgmj4yDs/0v8JOhV6GnLhSdpPspaB2EnQJkvzJLTdgmNMMjU5V7JWBJaPK3oTNXUaMM10MVDI1Oec
        dac5fcyE3Bp14slm8MATcovGpqlnPbzWNMxuNS+//L6/P9NkV2PBj7wLtJC/uMNS6GjJlgrycj0zuKDD
        i9Buki0E0neEuJyv7b4jDY7RNTUvZiwJ+dRL1txgWbfozYuyjZo6CRhmD6istrurTU01wtjLSsZmbfge
        ssuR4Eee6v3cYZ6DPiFZMoNlukF3cAUOF0qWf3jwXbimfglaWfrX412ooiI4lmOJyaZB/vqoqZOAWb7q
        G9lWEUwdGHuZZ+yvyi6XgR/4Y9Ab/LUt1kH7S5bcYNkPQsu4IouXIT2ZAL4H19QvQDeV/g3IVR/ig+V+
        Xlrcg3f/L5f+DVBTJwGzLLTN7KsopqaaGtr4jL1AdrkM/MBsu3Q5T8IVg3VMKa0qRIf3eMM2doY+BfWC
        9oZqdgJjXSyFfATaD+oBfVBCucByUXfq/qV/A2ZL9sxgGV5M7aL3cuio0r8BVZkay/Jx6eMQv999oF0l
        VDVY107Q7lDko1otwTb4qMffkMewk5cI87Jv9ybbzL6KZGoKd+xNj8xf38PbcQscTHeId1CbV6BdJEvF
        YB38cd7iCi2+LuEApH0autpSZCUR0tlr7b8snSkhxngyTITqIdbEszMM4bNqK/QraCiUu9MFluFJfAL0
        M2gF9B7EO+AW6G/QU9BVUOYRc8jrmpqlGl6MaEIfFsFz9TVAfrfo/SPo6NK/AbGmRvqNkP/9XiXJTOfF
        bCB0L8TKVP85nd/zm9A86Fwod30IlmEHJz7+LYD42/0d4vfK8/Cn0CDI+93wl/UFPEZfvb2VOCCdHW/s
        c6VOQozxgv/fUBvE35Aq1RvBvGe6ZvZVNFNTDbNaP+/tuAUO5kjI5UoJVw3WxaYVFv98fVZCAUjL1KSF
        dHdfb5f0g6EnvZRkaMQfQ5kvWMjLC84cKAs0IU3xYVk8FuRxTc2LBS8eXN7mS7JIJpDfLnqTftCxpX8D
        Ik2NNBrXvsv/WdL3hLheuyIvjj9A+3grTAH5uD12N6a5kuB2H4I+CvH3sLlBVhcC6eNL4YCpkv5ZCA4t
        o3RewrwzXDP7KqKpZ9e33urtuAUO5lulYwpRky6mWcH2KjY1xLvHeu9Tdm6RVSaCfLyzu3UNWXgeOkBW
        Ewnirql592OpiQa0zdMgi6SCvLyL2f0FeKfjOo/zPrWT2dTQJ6FnvU/Z4QX2A7LaSBDntr4PZblQ+HA/
        +HvbZDY11AdiXVEUgambXTP7Kqip53s7boGDca/sPOiqi955wPYqNTWLfLahWdR+AvoJxGY1FhXZH92F
        Rca+stpIED8GYo84GxbT2NHmSuiL0NchdsCxi8w+fKSJrb1GzDW1ZzSRvT4WRTMVwZFvrLdEOz+S9MGl
        jwFZTc3aeLsERAOyifMB6GaI/fyfgaKM+U1ZbSSIX1bKFoLHypr6G6DLIf6GNLK9fvdRMaupr4fcilub
        wNSvuGb2VUxTr13h7bgFDsbtLBJbodZRYJuVmtqGBj9UsgYgbVfoh8zgUFZq8UGMxU32nLPh5+MlSwik
        s8LlYojP2jb3SZYyEHNNzed+r7IGf939zVRpiXw0mw+NcIyks8Rhk9XUNjx+/k6hzkf4zGVYl8FHDxs2
        h0bWXyCdjwRu2zkfcQ6SLAFI4yPJGGgtFEVWU/P79WE9z20QL4KsRGSRfHdvQZg3djaTgpr6HW/HBRwI
        v7C/QDaxJ2JHgW1Wa+pfQrGlC8R4nLOZ0eIFCZeBmNu0xDvWfhKOBXlY22/fVVgi6CPhEEh3Tc3nSt/U
        PMlsmryFEkAet9bbK3pLrM5LaSevqVkM/5RkiwRx3lltWGoqWwZp3MajzGAxH0orrnMkX1TROaupff4I
        xT8awbxbXDP7KqKpKdl1Dxwca1tZy2hzk4Q7DWyzGlMvgT4kWWJBHncbPO6yZhOkfQL6KzMILHIPkXAi
        yMcTtpELWcyQcAikJ5nabZFgsfST3oIxIF5W6y0hxqoxNe/Ah0mWWJCHlVju3XqQhAOQxsca+8LHZT4t
        4USQ7xxviTB5TM0bWHIlHsy7rZv6AxBPGJvrJNxpYJvVmHqShBNBPrYt8+7hQ7OW/cBI41hjm2YJZQL5
        OYGEDdufy4qhSIs1NcH/P/BS2/myhCJB3C56k6CvPf6vxtR3STgV5HVH9pUN5EGaWwp6UEKpIC9vQu5j
        UR5Tp7ckwLzbevGbz4Lu1TVom+wssM1KTc3nso9KOBHk4wnhNp1EPcO5zVfnSygTyL8HZE8mwQtJ2T4i
        Lc3UbFu272ixFxfEWPQuq/WWMOPVmPoUCaeCvBy9ZxPqEYfPXL9bkz5BwplA/v8sLRaQ1dQ8rvSOQjDv
        Nl1RhoNkMc/9EVMHf9QabLNSU78GZRovjnw8VncEWqjYh880PjtS2GQezOKDZdikZRPVNp9matYDsKbZ
        h5VwkUVwpEfWevvgczWm/oyEU0HemaVFAkJ3RnzmxccuGfKi1UvCmUD+z3tLtpPV1NlG/sG821iT1tpQ
        kxYOlD8iOz3Y3CbhTgPbrNTUf5JQKsibxdScYojFchvWkk7PKbeJ62TZRADSEk1N8JntuDZfkVAIpLu1
        3qFhrvhcqam5rsyDSpA3zdSfgezSB5sMc/VAQ35OlWWT1dQzJZQMzJva+eRMmPTc0ePNBMe4vqLitqmH
        QeOgofLZVR3EeN2ALKaO7HziDrf8rYQ6DWyzUlM/JaFUkDeLqd2eV7XiLNlEANKymJrHa5tgroQCkJZY
        9Cb4XI2pU3vH+SBvmqldQ/KGEtnsFQfyH+It2U5WU2d7dod5E7qJ/tnMOvtm89ZZZ5mW/oNMY4/e5roh
        I0OG/vXpE82biK8aNMQ073OIueGEk0Kmvmf4KPPGGRPN6sF1pnnPg8z0PseEDH3HiSPNujPOMK/XDTdz
        dz/Q3NjvenP+lHhTN8xqPVt2PQAHy5lLbHhS5Pqik8C6ToO4DV/XSygAaZWa+kkJpYK8WUzttufWirK+
        7EjLYmoWwVnR5sMieKhyD5/dovcPJRSAtGpMndqy4IO8aaZ2v98XJZQZLPMvpUUDam7q2AEdcy5vNGYS
        iv+TJpkVxw4yj+/QwyzYtZe5dPgYz7g/O22i2YoY46/B1Iwv3Gk/c8WwUzxTzxg2wmyR+JoThnnxP3Tr
        aS4/sr9n6OlDh5vNuCAw3lo3wos/3q2XuXXiryMNDW1qbmwrG3CAg2WnCRu2raa2yWYF63rYW2s7v5FQ
        ANKKYuohpeQAFsXZvs1BItVouGwiAGmppiZIm+ZF2wkNocXn2FpvH6QVxdQcFGMT21cgDizjngO1NTWB
        gRe4hqY2XvbvnuFsU1P3H3mcZ+qWiSVDUr6pqV/0OdYz9YvjcIOTuG9q6lc9e3umXjx2XBAPTA01j5ga
        ZWg+Ty+SXQ6Bg3U7OpCvSbgqsJ4PQ27FU9lgEaQVxdTuaCZe4GoyXa8L1pvV1JxCKrIIjv9Z9Lb7prMb
        ZJRZi2Jq91xjp568xe+TvSXb6RBTR06SsOmSKwLT2aZuPqK/uWHkqaZt/IQgbpt6Xu9+ZnrdSPPaqe2m
        tU39yAGHmeuOG2KWjzk1iNumXjD07EhTo+h9gexyCBwsa3zdk51dR6uemB/rwA6W0V/CAUgriqn3hdyK
        skMkXFOw3qymptHYo8uHzXheERx/2X3SpqzoTZBeFFNz/LV9gWJzaq5x08jvjv3vEFNHTme02TH1op33
        M60oUm/lM/TAweaJ3faHWfFdI05TL+re07w+5EQvvvr4oWbRLr3Ma59DaRBxz9QoevPZmnHm4/pWDjje
        +5zB1Bubm9Z9RHa5DBywO6cYv/jREq4ILE8TucMh+bwedeIWxdTM0+pF2snUucUGy7Ctmp1dKPYjz935
        xAbp13k52vHGpOPv/aWPAZGTOyK9KKZmvwh7fD3Xn2vSDORnH3+b2puawMTTykw9NWzqVccNDj7T1J4J
        u/UwG0ed4pm65ZjPBXGa2jfp+hGjPFMvO6p/EKep/TgvFLapF0aYenZ96w9kVyPBAbPywe1gz6Jc4rxm
        SWBZDph3uUzCIZBeCFMTpP1PKRTwgIQygfycEYRNNSy6U7xIlM0MgrQ8pj4Msu9wHCnG2VvtWu/IojdB
        eiFMTZDm9vu+WkKpIC/HUrMzj02HmZpTBHMq3nZTXxo29d+s4nRgauiVowd4pn5r9Nggbpt6yeH9PFNv
        gPn9uG3qFw/um2zq+rVtzY1tqW2NOOi7S8cegid47mGYWIbjVu2Tg7CjSGkkjAPSi2RqfMkh2Ee8bMaY
        OJD3Wm+pdiLbR5Gex9SsBbc7tPACzGGfNpFFb4JYkUz93VIoIPa8sEEe7lvUtMcdY2oCI59rm3rNvXPM
        yhsf8rT4+gfNu5O/EpjSNvUfR042z0ybaf465RtB3Db104MnmOemzzRvnvetIG6b+qn+o83z359p5n/v
        Pk/zpj8UMjWepRP7DPvgoDkYnj+2y/9BH5dsqSAv59lyR37x5Ih9UwdiRTI174CvetF2eDKlVuggD9u5
        7S6ifD4fKOEQSM9saoLYNV6uduwKSH6/Zb3WfBArkqk5JZXbNZk3lMQ6HMS/BnF/XDrU1KHX7qxatcXM
        m7s+MNc7F7TfuW1TPzb5Gi/+9iXTg7ht6t+fdrEX33D5zUHcNvWCk88PtuEKxe5Z8+asjyySRYEDHwG5
        xXDCk+BSKNRGaoPYQRCfzd0xxSSxlxrihTE1QXrUaKD/gGIn2EOMtbLu0MBfSrgMxPKa+lDIrcTziS16
        E8QKY2qCdHfKJsL6gbLJIJDGxxmeV3HH3nGmJjAzX5DHF9N5xl65Esaes84zWGebenb92pVNjW2Jw/Wi
        wMF/AYoyNqFh2SGfdy7O+MHZL9hOygHx7rOOzy+gxK6AiBfN1Czuuu2/hH2x+dLA4RCbZ/gKX95B5kLu
        Sce7fez3j1heU9Nwf2LGCGKL3gTxopmapSHOZebCugj2a+C5xYkBmyF3aDDb/W061tQEZu4DcfJ8MfZm
        M7d5XWebekPj7NYjZZdygy8g6q6TF57kNH1q317kKZSpCWIclupWmmWFjx9HyKoiQTyXqQninLHUJbHo
        TRAvlKkJYmwZcF8ykMatkDu0teNNTWDmAVDQzLVixWbz/MxnzHN3P+5p4R2/N3Nue9RT091Pe0Z8+r7F
        QfzxOxcE8eYfP+HFn7r/2SC+yI7ftcg2M7URhi4bnJ4XfAmcD5l3ZNbg5oWv2Bkpq0qFeb2l2ulyUxPE
        2YbPii93zHkSvGsnTjpIkKcSU7Pfs/tcmVj0JogXztQEcU7r/E2I+5MEa/mZjyWo05lgUdbtmCC9tqYm
        MHNf6FXb2HOaSkXxDlP92tUwdOJVOy/4Mvgsx2cajjxKMjh7NnEaV04JnHfkTdZ5v1mZZ+fL/MIB5OUJ
        y5lT7eWzvjiQTX6cuZTzZLmmIv6x8+KUdSjogZC9L6yzSKssijqGMRKOBXncbV0CRVb8If07Vj6WDPJM
        p0zD2dtJnNzRB/nYM44m5PzcvHuz2Yvdc/nqpslQ8Dvhf/cFEXHNpLwA2vtymoSqA2Zm3/B5vrFbWjab
        5qa2aENWKTxDP9bUUN63u1bgS+FVkm+lYKd8PAeYL0F8/h4Fcd7tmr2loajgGHnn/leId9lTIH4X/Lzd
        H3tRwHeN59gQX5BQ5wEz7wRNhbxZUlpaNpnmxpoa++2GWa3fmdu8PvebERRlWwMmvq/k5YBjJdT5wNA9
        oTugd5cv32Saqjf2e7PrW3+Ku3PFL7FTlM4GJmQp598spT4++CAvn8FbIB/WjGce791hwNQ9oKuXLXt/
        CQy5NcKsiUIxexnuzNPUzMq2CEzIlyDYcHxAppFayOfOmJr7BYIdCozdfcFjGw6DQS/CHfcBmHUx1AZt
        EfNukc9Ib/058l0MIx8+f272ziSKUjRgRFaK2m36rHgcK+FYkIedm9il1GachBVF6UpgRndudHY6YV/2
        suYzpPHNqXyxovuGDtaQ6w1OUYoAzMjmJrs93IfDMvk6W3b6+Q3E96LZL1bwWQMdKKtTFKUIwJR8E6fb
        GSgLnDCiQyauUBSlSmBOvqqHNeDsTZcG+9LzfV3pE/IritK1wKi7QezI822IAzk4mIavIebYgQshDufV
        fhiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKonQy
        O+zw/5hzrf1KbiAeAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="bindingSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>82</value>
  </metadata>
</root>